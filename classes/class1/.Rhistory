# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "'")
# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "'")
getwd()
# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "/Users/matildeelene/Documents/GitHub/resources_class/classes")
knitr::opts_chunk$set(echo = TRUE)
# Setting my root directory to where I have my /data folder etc. (easier for me, but personalise to your own way of working)
knitr::opts_knit$set(root.dir = "/Users/matildeelene/Documents/GitHub/resources_class/classes")
# Make sure this guy is installed/updated (if you've alreadygot rstanarm installed, you just need to load it in using either library() or p_load() as below)
install.packages("rstanarm")
library(rstanarm)
# Load the rest
library(pacman)
pacman::p_load(tidyverse,
ggpubr,
ggplot2,
stringr) # this time I'm just giving you the code
# Load data
hibbs <- read.table("data/ElectionsEconomy/data/hibbs.dat", header = TRUE)
# Make scatterplot
plot(hibbs$growth, hibbs$vote, xlab="Average recent growth in personal income",
ylab="Incumbent party's vote share")
# Estimate regression y = a + bx + error
M1 <- stan_glm(vote ~ growth, data=hibbs)
# Add a fitted line to the graph
abline(coef(M1), col="gray") # needs to be run with the plot() code above - running the whole chunk is the easiest way
# Load data
hibbs <- read.table("data/ElectionsEconomy/data/hibbs.dat", header = TRUE)
# Make scatterplot
plot(hibbs$growth, hibbs$vote, xlab="Average recent growth in personal income",
ylab="Incumbent party's vote share")
# Estimate regression y = a + bx + error
M1 <- stan_glm(vote ~ growth, data=hibbs)
# Add a fitted line to the graph
abline(coef(M1), col="gray") # needs to be run with the plot() code above - running the whole chunk is the easiest way
# Display the fitted model
print(M1)
# Basic plot with ggplot2
ggplot(hibbs, aes(x = growth, y = vote)) +
geom_point() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "blue")  # Add a linear regression line
# Basic plot with ggplot2
ggplot(hibbs, aes(x = growth, y = vote)) +
geom_point() +  # Add points
labs(
x = "Average recent growth in personal income",
y = "Incumbent party's vote share",
title = "Relationship between Income Growth and Vote Share",
subtitle = "Data from Hibbs Dataset"
) +
theme_minimal() +  # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
plot.subtitle = element_text(hjust = 0.5)  # Center the subtitle
) +
geom_smooth(method = "lm", se = FALSE, color = "pink")  # Add a linear regression line
set.seed(1998) # setting a seed (in the best year ever??) - this way, even though it's random, you'll get reproducible results next time you run this with this seed
# rnorm() works like: my_simulated_data <- rnorm(n, mean, sd) - now you go!
# your code here
# rnorm() works like:
my_simulated_data <- rnorm(n, mean, sd) - now you go!
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
Creating fake data:
#Creating fake data:
set.seed(1998) # setting a seed - this way, even though it's random, you'll get reproducible results next time you run this with this seed
# rnorm() works like: my_simulated_data <- rnorm(n, mean, sd) - now you go!
# your code here
# your code here
rnorm()
# your code here
simulate_data <- rnorm(n,mean,ds)
# your code here
simulate_data <- rnorm(n,mean,sd)
# your code here
simulate_data <- rnorm(n,mean,sd)
set.seed(1998) # setting a seed (in the best year ever??) - this way, even though it's random, you'll get reproducible results next time you run this with this seed
# your code here
simulate_data <- rnorm(n,mean,sd)
?rnorm()
# your code here
simulate_data <- rnorm(n=100,mean,sd)
# your code here
simulate_data <- rnorm(n=100,mean=23,sd=17)
# your code here
simulate_data <- rnorm(n=100,mean=23,sd=17)
#Creating fake data: Specify some amount of data points (n), some mean and some sd, and use rnorm() to simulate this amount of data points based off of the mean and sd you've set.
set.seed(1998) # setting a seed - this way, even though it's random, you'll get reproducible results next time you run this with this seed
{
df %>% ggplot(aes(x = gender, y = balloon_balance, fill = gender)) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
}
df %>% ggplot(simulate_data) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
simulate_data %>% ggplot(aes() +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
}
simulate_data %>% ggplot(aes(x = gender, y = balloon_balance, fill = gender)) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
create_df
simulate_data %>%  <- data.frame(simulate_data)
df<- data.frame(simulate_data)
View(df)
View(df)
simulate_data %>% ggplot(aes(x, y)) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
}
simulate_data %>% ggplot(aes(x, y)) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
simulate_data <- rnorm(n=100,mean=23,sd=17)
df<- data.frame(simulate_data)
simulate_data %>% ggplot(aes(x, y)) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
simulate_data %>% ggplot(aes(x, y)) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
df %>% ggplot(aes(x, y)) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
df %>% ggplot(aes(x=simulate_data, y)) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
df %>% ggplot(aes(x=simulate_data, y)) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
df %>% ggplot(aes(x=simulate_data, y)) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
df %>% ggplot(aes(x=simulate_data, y)) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
df %>% ggplot(aes(x=simulate_data, y=n)) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
df %>% ggplot(aes(x=simulate_data, y="n")) +
geom_bar(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
df %>% ggplot(aes(x=simulate_data, y="n")) +
gghistogram(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
df %>% ggplot(aes(x=simulate_data, y="n")) +
hist(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
df %>% ggplot(aes(x=simulate_data, y="n")) +
geom_hist(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
df %>% ggplot(aes(x=simulate_data, y="n")) +
geom_histogram(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2) +
labs(x = "Gender",
y = "Balloon time",
title = "Balancing balloons",
subtitle = "Is so fun",
caption = "Data source: CogSci Personality Test 2023") +
theme_minimal()
df %>% ggplot(aes(x=simulate_data, y="n")) +
geom_histogram(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2)
?rnorm
df %>% ggplot(aes(x=simulate_data, y)) +
geom_histogram(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2)
df %>% ggplot(aes(x=simulate_data, y="n")) +
geom_histogram(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2)
df<- data.frame(simulate_data)
df <- df %>%
mutate(ordinal_number = row_number())
df %>% ggplot(aes(x=simulate_data, y="n")) +
geom_histogram(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2)
df<- data.frame(simulate_data)
df2 <- df %>%
mutate(ordinal_number = row_number())
simulate_data <- rnorm(n=100,mean=23,sd=17)
df<- data.frame(simulate_data)
df <- df %>%
mutate(ordinal_number = row_number())
df %>% ggplot(aes(x=ordinal_number, y=simulate_data)) +
geom_histogram(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2)
subtitle = "It's so fun" +
set.seed(1998) # setting a seed (in the best year ever??) - this way, even though it's random, you'll get reproducible results next time you run this with this seed
set.seed(1998) # setting a seed (in the best year ever??) - this way, even though it's random, you'll get reproducible results next time you run this with this seed
# rnorm() works like: my_simulated_data <- rnorm(n, mean, sd) - now you go!
# your code here
simulate_data <- rnorm(n=100,mean=23,sd=17)
df<- data.frame(simulate_data)
df <- df %>%
mutate(ordinal_number = row_number())
df %>% ggplot(aes(x=ordinal_number, y=simulate_data)) +
geom_histogram(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2)+
labs(x = "Ordinals",
y = "Some data that we like",
title = "Oh we love random stuff",
subtitle = "It's so fun" +
theme_minimal()
set.seed(1998) # setting a seed (in the best year ever??) - this way, even though it's random, you'll get reproducible results next time you run this with this seed
# rnorm() works like: my_simulated_data <- rnorm(n, mean, sd) - now you go!
# your code here
simulate_data <- rnorm(n=100,mean=23,sd=17)
df<- data.frame(simulate_data)
df <- df %>%
mutate(ordinal_number = row_number())
df %>% ggplot(aes(x=ordinal_number, y=simulate_data)) +
geom_histogram(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2)+
labs(x = "Ordinals",
y = "Some data that we like",
title = "Oh we love random stuff",
subtitle = "It's so fun" +
theme_minimal()
set.seed(1998) # setting a seed (in the best year ever??) - this way, even though it's random, you'll get reproducible results next time you run this with this seed
# rnorm() works like: my_simulated_data <- rnorm(n, mean, sd) - now you go!
# your code here
simulate_data <- rnorm(n=100,mean=23,sd=17)
df<- data.frame(simulate_data)
df <- df %>%
mutate(ordinal_number = row_number())
df %>% ggplot(aes(x=ordinal_number, y=simulate_data)) +
geom_histogram(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2)+
labs(x = "Ordinals",
y = "Some data that we like",
title = "Oh we love random stuff",
subtitle = "It's so fun" +theme_minimal()
df %>% ggplot(aes(x=ordinal_number, y=simulate_data)) +
geom_histogram(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2)+
labs(x = "Ordinals", y = "Some data that we like",title = "Oh we love random stuff", subtitle = "It's so fun" + theme_minimal())
df %>% ggplot(aes(x=ordinal_number, y=simulate_data,fill="pink")) +
geom_histogram(stat = 'summary',
fun = mean,
width = 0.5) +
geom_errorbar(stat = 'summary',
fun.data = mean_se,
width = 0.2)+
labs(x = "Ordinals", y = "Some data that we like",title = "Oh we love random stuff", subtitle = "It's so fun" + theme_minimal())
y = 46.3 + 3.0x
letsgo <- y = 46.3 + 3.0x
mean(df)
mean(df$simulate_data)
sd(df$simulate_data)
mean(df$simulate_data)
sd(df$simulate_data)
